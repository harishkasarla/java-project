name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: [self-hosted, macos]

    # env:
    #   PROJECT_ID: your-gcp-project-id
    #   REGION: asia-south1
    #   REPO_NAME: jenkins-images
    #   IMAGE_NAME: spring-boot-app
    #   CLUSTER_NAME: your-gke-cluster
    #   DEPLOY_NAMESPACE: default

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v2

    - name: Extract short commit hash
      id: vars
      run: echo "COMMIT_HASH=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV

    - name: Build Docker image
      run: |
        FULL_IMAGE="${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_NAME}:${COMMIT_HASH}"
        docker build -t $FULL_IMAGE -f Dockerfile .

    # - name: Authenticate to Google Cloud
    #   uses: google-github-actions/auth@v1
    #   with:
    #     credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    # - name: Configure Docker for Google Artifact Registry
    #   run: gcloud auth configure-docker ${REGION}-docker.pkg.dev --quiet

    # - name: Push Docker image to GAR
    #   run: |
    #     FULL_IMAGE="${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_NAME}:${COMMIT_HASH}"
    #     docker push $FULL_IMAGE

    # - name: Set up kubectl
    #   uses: google-github-actions/get-gke-credentials@v1
    #   with:
    #     cluster_name: ${{ env.CLUSTER_NAME }}
    #     location: ${{ env.REGION }}
    #     credentials: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    # - name: Deploy to GKE
    #   run: |
    #     FULL_IMAGE="${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_NAME}:${COMMIT_HASH}"
    #     kubectl set image deployment/${IMAGE_NAME} ${IMAGE_NAME}=$FULL_IMAGE -n ${DEPLOY_NAMESPACE}
    #     kubectl rollout status deployment/${IMAGE_NAME} -n ${DEPLOY_NAMESPACE}
